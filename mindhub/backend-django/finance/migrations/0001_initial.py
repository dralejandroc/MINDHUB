# Generated by Django 5.2.1 on 2025-08-22 14:59

import django.core.validators
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CashRegisterCut',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('clinic_id', models.UUIDField(help_text='Clinic UUID from Supabase')),
                ('responsible_professional_id', models.UUIDField(help_text='Professional who made the cut')),
                ('cut_date', models.DateField(default=django.utils.timezone.now)),
                ('cut_number', models.CharField(help_text='Sequential cut number', max_length=50)),
                ('expected_cash', models.DecimalField(decimal_places=2, help_text='Expected cash based on transactions', max_digits=10)),
                ('actual_cash', models.DecimalField(decimal_places=2, help_text='Actual cash counted', max_digits=10)),
                ('difference', models.DecimalField(decimal_places=2, default=0, help_text='Difference between expected and actual', max_digits=10)),
                ('total_cash_income', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_card_income', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_transfer_income', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_other_income', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('notes', models.TextField(blank=True, help_text='Cut observations and notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('responsible_professional_name', models.CharField(blank=True, max_length=200)),
            ],
            options={
                'db_table': 'finance_cash_register_cuts',
                'ordering': ['-cut_date', '-created_at'],
                'indexes': [models.Index(fields=['cut_date'], name='finance_cas_cut_dat_081fb7_idx'), models.Index(fields=['clinic_id'], name='finance_cas_clinic__9bc59d_idx'), models.Index(fields=['responsible_professional_id'], name='finance_cas_respons_cb08e3_idx')],
                'unique_together': {('clinic_id', 'cut_date', 'cut_number')},
            },
        ),
        migrations.CreateModel(
            name='FinancialService',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('clinic_id', models.UUIDField(help_text='Clinic UUID from Supabase')),
                ('name', models.CharField(help_text='Service name', max_length=200)),
                ('code', models.CharField(blank=True, help_text='Internal service code', max_length=50)),
                ('description', models.TextField(blank=True)),
                ('category', models.CharField(blank=True, help_text='Service category', max_length=100)),
                ('standard_price', models.DecimalField(decimal_places=2, help_text='Standard price for this service', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('currency', models.CharField(default='MXN', max_length=3)),
                ('is_active', models.BooleanField(default=True)),
                ('allows_discount', models.BooleanField(default=True)),
                ('max_discount_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('estimated_duration_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'finance_services',
                'ordering': ['category', 'name'],
                'indexes': [models.Index(fields=['clinic_id'], name='finance_ser_clinic__6163c3_idx'), models.Index(fields=['is_active'], name='finance_ser_is_acti_709280_idx'), models.Index(fields=['category'], name='finance_ser_categor_c6e076_idx')],
            },
        ),
        migrations.CreateModel(
            name='Income',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('patient_id', models.UUIDField(blank=True, help_text='Patient UUID from Supabase', null=True)),
                ('professional_id', models.UUIDField(blank=True, help_text='Professional UUID from Supabase', null=True)),
                ('consultation_id', models.UUIDField(blank=True, help_text='Consultation UUID from Supabase', null=True)),
                ('clinic_id', models.UUIDField(blank=True, help_text='Clinic UUID from Supabase', null=True)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Amount in local currency', max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('currency', models.CharField(default='MXN', help_text='Currency code (ISO 4217)', max_length=3)),
                ('source', models.CharField(choices=[('consultation', 'Consulta'), ('advance', 'Anticipo'), ('therapy', 'Terapia'), ('evaluation', 'Evaluación'), ('procedure', 'Procedimiento'), ('medication', 'Medicamento'), ('other', 'Otro')], default='consultation', max_length=20)),
                ('payment_method', models.CharField(choices=[('cash', 'Efectivo'), ('credit_card', 'Tarjeta de Crédito'), ('debit_card', 'Tarjeta de Débito'), ('transfer', 'Transferencia'), ('payment_gateway', 'Pasarela de Pago'), ('check', 'Cheque'), ('insurance', 'Seguro')], default='cash', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('confirmed', 'Confirmado'), ('cancelled', 'Cancelado'), ('refunded', 'Reembolsado')], default='pending', max_length=20)),
                ('description', models.CharField(blank=True, help_text='Brief description of the service', max_length=255)),
                ('concept', models.TextField(blank=True, help_text='Detailed concept/notes')),
                ('notes', models.TextField(blank=True, help_text='Internal notes')),
                ('reference', models.CharField(blank=True, help_text='External reference/invoice number', max_length=100)),
                ('received_date', models.DateField(default=django.utils.timezone.now, help_text='Date when payment was received')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient_name', models.CharField(blank=True, help_text='Cached patient name for faster queries', max_length=200)),
                ('professional_name', models.CharField(blank=True, help_text='Cached professional name', max_length=200)),
            ],
            options={
                'db_table': 'finance_income',
                'ordering': ['-received_date', '-created_at'],
                'indexes': [models.Index(fields=['received_date'], name='finance_inc_receive_6cfefb_idx'), models.Index(fields=['patient_id'], name='finance_inc_patient_11ffdb_idx'), models.Index(fields=['professional_id'], name='finance_inc_profess_b87a59_idx'), models.Index(fields=['status'], name='finance_inc_status_505b34_idx'), models.Index(fields=['source'], name='finance_inc_source_3ec98e_idx'), models.Index(fields=['clinic_id'], name='finance_inc_clinic__523d22_idx')],
            },
        ),
        migrations.CreateModel(
            name='PaymentMethodConfiguration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('clinic_id', models.UUIDField(help_text='Clinic UUID from Supabase')),
                ('payment_method', models.CharField(choices=[('cash', 'Efectivo'), ('credit_card', 'Tarjeta de Crédito'), ('debit_card', 'Tarjeta de Débito'), ('transfer', 'Transferencia'), ('payment_gateway', 'Pasarela de Pago'), ('check', 'Cheque'), ('insurance', 'Seguro')], max_length=20)),
                ('is_enabled', models.BooleanField(default=True)),
                ('display_name', models.CharField(help_text='Custom display name', max_length=100)),
                ('processing_fee_percentage', models.DecimalField(decimal_places=3, default=0, help_text='Processing fee percentage (e.g., 2.9 for 2.9%)', max_digits=5)),
                ('configuration', models.JSONField(blank=True, default=dict)),
                ('display_order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'finance_payment_method_config',
                'ordering': ['display_order', 'display_name'],
                'indexes': [models.Index(fields=['clinic_id'], name='finance_pay_clinic__3093e9_idx'), models.Index(fields=['is_enabled'], name='finance_pay_is_enab_4be12f_idx')],
                'unique_together': {('clinic_id', 'payment_method')},
            },
        ),
    ]
