# Generated by Django 5.2.5 on 2025-08-13 02:13

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('psychometric_scales', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('mode', models.CharField(choices=[('self', 'Autoaplicada'), ('interviewer', 'Heteroaplicada'), ('mixed', 'Mixta')], default='self', max_length=20)),
                ('instructions', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('not_started', 'No iniciada'), ('in_progress', 'En progreso'), ('completed', 'Completada'), ('cancelled', 'Cancelada'), ('expired', 'Expirada')], default='not_started', max_length=20)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('duration_minutes', models.FloatField(blank=True, null=True)),
                ('current_item', models.PositiveIntegerField(default=0)),
                ('total_items', models.PositiveIntegerField()),
                ('session_data', models.JSONField(default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('response_time_data', models.JSONField(default=list)),
                ('is_valid', models.BooleanField(default=True)),
                ('validity_notes', models.TextField(blank=True)),
                ('assessment_reason', models.TextField(blank=True)),
                ('clinical_context', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_assessments', to=settings.AUTH_USER_MODEL)),
                ('evaluator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conducted_assessments', to=settings.AUTH_USER_MODEL)),
                ('scale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='psychometric_scales.psychometricscale')),
            ],
            options={
                'verbose_name': 'Evaluación',
                'verbose_name_plural': 'Evaluaciones',
                'db_table': 'clinimetrix_assessments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ClinicalReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('clinical_complete', 'Informe Clínico Completo'), ('clinical_summary', 'Resumen Clínico'), ('evolution', 'Informe de Evolución'), ('consultation', 'Informe de Interconsulta'), ('research', 'Informe de Investigación')], default='clinical_complete', max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('generated_for', models.CharField(blank=True, max_length=200)),
                ('institution', models.CharField(blank=True, max_length=200)),
                ('content_html', models.TextField()),
                ('content_pdf', models.FileField(blank=True, null=True, upload_to='reports/')),
                ('include_raw_data', models.BooleanField(default=False)),
                ('include_graphs', models.BooleanField(default=True)),
                ('include_recommendations', models.BooleanField(default=True)),
                ('include_interpretation', models.BooleanField(default=True)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('template_version', models.CharField(default='1.0', max_length=20)),
                ('is_confidential', models.BooleanField(default=True)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='assessments.assessment')),
                ('generated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('shared_with', models.ManyToManyField(blank=True, related_name='shared_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reporte clínico',
                'verbose_name_plural': 'Reportes clínicos',
                'db_table': 'clinimetrix_reports',
                'ordering': ['-generated_at'],
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('medical_record', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('age', models.PositiveIntegerField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Masculino'), ('F', 'Femenino'), ('O', 'Otro'), ('N', 'Prefiero no decir')], max_length=1)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('address', models.TextField(blank=True)),
                ('diagnosis', models.TextField(blank=True)),
                ('medications', models.TextField(blank=True)),
                ('medical_history', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('consent_given', models.BooleanField(default=False)),
                ('consent_date', models.DateTimeField(blank=True, null=True)),
                ('data_retention_until', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_clinician', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_patients', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_patients', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Paciente',
                'verbose_name_plural': 'Pacientes',
                'db_table': 'clinimetrix_patients',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.AddField(
            model_name='assessment',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='assessments.patient'),
        ),
        migrations.CreateModel(
            name='ScoringResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_score', models.FloatField()),
                ('total_score_raw', models.FloatField(blank=True, null=True)),
                ('subscale_scores', models.JSONField(default=dict)),
                ('interpretation_label', models.CharField(blank=True, max_length=200)),
                ('severity_level', models.CharField(blank=True, max_length=50)),
                ('severity_color', models.CharField(blank=True, max_length=7)),
                ('clinical_interpretation', models.TextField(blank=True)),
                ('professional_recommendations', models.JSONField(blank=True, null=True)),
                ('percentile', models.FloatField(blank=True, null=True)),
                ('z_score', models.FloatField(blank=True, null=True)),
                ('t_score', models.FloatField(blank=True, null=True)),
                ('reliability_alpha', models.FloatField(blank=True, null=True)),
                ('sem_value', models.FloatField(blank=True, null=True)),
                ('response_bias_detected', models.JSONField(blank=True, null=True)),
                ('response_consistency', models.FloatField(blank=True, null=True)),
                ('scoring_algorithm_version', models.CharField(default='1.0', max_length=20)),
                ('computed_at', models.DateTimeField(auto_now_add=True)),
                ('is_valid', models.BooleanField(default=True)),
                ('validation_notes', models.TextField(blank=True)),
                ('assessment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='scoring_result', to='assessments.assessment')),
                ('computed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Resultado de puntuación',
                'verbose_name_plural': 'Resultados de puntuación',
                'db_table': 'clinimetrix_scoring_results',
            },
        ),
        migrations.CreateModel(
            name='AssessmentResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_number', models.PositiveIntegerField()),
                ('section_id', models.CharField(blank=True, max_length=50)),
                ('response_value', models.IntegerField()),
                ('response_label', models.CharField(max_length=200)),
                ('raw_score', models.FloatField(blank=True, null=True)),
                ('response_time_seconds', models.FloatField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_skipped', models.BooleanField(default=False)),
                ('is_changed', models.BooleanField(default=False)),
                ('change_count', models.PositiveIntegerField(default=0)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='assessments.assessment')),
            ],
            options={
                'verbose_name': 'Respuesta de evaluación',
                'verbose_name_plural': 'Respuestas de evaluación',
                'db_table': 'clinimetrix_responses',
                'ordering': ['assessment', 'item_number'],
                'unique_together': {('assessment', 'item_number')},
            },
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['medical_record'], name='clinimetrix_medical_2c9c01_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['created_by'], name='clinimetrix_created_9bc512_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['assigned_clinician'], name='clinimetrix_assigne_33b7e9_idx'),
        ),
        migrations.AddIndex(
            model_name='assessment',
            index=models.Index(fields=['patient'], name='clinimetrix_patient_68f8b7_idx'),
        ),
        migrations.AddIndex(
            model_name='assessment',
            index=models.Index(fields=['scale'], name='clinimetrix_scale_i_0742f1_idx'),
        ),
        migrations.AddIndex(
            model_name='assessment',
            index=models.Index(fields=['status'], name='clinimetrix_status_efbfaa_idx'),
        ),
        migrations.AddIndex(
            model_name='assessment',
            index=models.Index(fields=['created_by'], name='clinimetrix_created_0ba8d6_idx'),
        ),
    ]
