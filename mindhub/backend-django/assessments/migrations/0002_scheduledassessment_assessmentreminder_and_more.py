# Generated by Django 5.2.5 on 2025-08-13 15:13

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('assessments', '0001_initial'),
        ('psychometric_scales', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ScheduledAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('frequency', models.CharField(choices=[('weekly', 'Semanal'), ('biweekly', 'Quincenal'), ('monthly', 'Mensual'), ('quarterly', 'Trimestral'), ('custom', 'Personalizado')], max_length=20)),
                ('frequency_days', models.PositiveIntegerField(blank=True, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('next_due_date', models.DateField()),
                ('next_consultation_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Activo'), ('paused', 'Pausado'), ('completed', 'Completado'), ('cancelled', 'Cancelado')], default='active', max_length=20)),
                ('total_completed', models.PositiveIntegerField(default=0)),
                ('send_remote_link', models.BooleanField(default=True)),
                ('reminder_days_before', models.PositiveIntegerField(default=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_assessments', to='assessments.patient')),
                ('scale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='psychometric_scales.psychometricscale')),
            ],
            options={
                'verbose_name': 'Evaluación programada',
                'verbose_name_plural': 'Evaluaciones programadas',
                'db_table': 'clinimetrix_scheduled_assessments',
                'ordering': ['next_due_date', 'patient__last_name'],
            },
        ),
        migrations.CreateModel(
            name='AssessmentReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminder_type', models.CharField(choices=[('scheduled', 'Evaluación programada'), ('followup', 'Seguimiento'), ('overdue', 'Vencida'), ('consultation', 'Próxima consulta')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('due_date', models.DateField()),
                ('reminder_date', models.DateField()),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('sent', 'Enviado'), ('completed', 'Completado'), ('dismissed', 'Descartado')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_reminders', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='assessments.patient')),
                ('scheduled_assessment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='assessments.scheduledassessment')),
            ],
            options={
                'verbose_name': 'Recordatorio',
                'verbose_name_plural': 'Recordatorios',
                'db_table': 'clinimetrix_reminders',
                'ordering': ['reminder_date', 'due_date'],
            },
        ),
        migrations.CreateModel(
            name='SecondaryDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('device_type', models.CharField(default='tablet', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('session_token', models.CharField(blank=True, max_length=64, null=True, unique=True)),
                ('session_expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_used_at', models.DateTimeField(blank=True, null=True)),
                ('current_assessment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='secondary_device', to='assessments.assessment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='secondary_devices', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Dispositivo secundario',
                'verbose_name_plural': 'Dispositivos secundarios',
                'db_table': 'clinimetrix_secondary_devices',
                'ordering': ['-last_used_at', 'name'],
            },
        ),
        migrations.CreateModel(
            name='RemoteAssessmentLink',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('token', models.CharField(max_length=64, unique=True)),
                ('expires_at', models.DateTimeField()),
                ('max_uses', models.PositiveIntegerField(default=1)),
                ('uses_count', models.PositiveIntegerField(default=0)),
                ('clinical_context', models.TextField(blank=True)),
                ('instructions', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assessment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assessments.assessment')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='remote_links', to='assessments.patient')),
                ('scale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='psychometric_scales.psychometricscale')),
            ],
            options={
                'verbose_name': 'Enlace de evaluación remota',
                'verbose_name_plural': 'Enlaces de evaluación remota',
                'db_table': 'clinimetrix_remote_links',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['token'], name='clinimetrix_token_9fef1e_idx'), models.Index(fields=['patient', 'is_active'], name='clinimetrix_patient_6b9782_idx'), models.Index(fields=['expires_at'], name='clinimetrix_expires_8bbb93_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='scheduledassessment',
            index=models.Index(fields=['status', 'next_due_date'], name='clinimetrix_status_471961_idx'),
        ),
        migrations.AddIndex(
            model_name='scheduledassessment',
            index=models.Index(fields=['patient', 'status'], name='clinimetrix_patient_247a94_idx'),
        ),
        migrations.AddIndex(
            model_name='scheduledassessment',
            index=models.Index(fields=['created_by', 'status'], name='clinimetrix_created_369b61_idx'),
        ),
        migrations.AddIndex(
            model_name='assessmentreminder',
            index=models.Index(fields=['status', 'reminder_date'], name='clinimetrix_status_467a4c_idx'),
        ),
        migrations.AddIndex(
            model_name='assessmentreminder',
            index=models.Index(fields=['assigned_to', 'status'], name='clinimetrix_assigne_c71690_idx'),
        ),
        migrations.AddIndex(
            model_name='assessmentreminder',
            index=models.Index(fields=['patient', 'status'], name='clinimetrix_patient_fa4894_idx'),
        ),
    ]
